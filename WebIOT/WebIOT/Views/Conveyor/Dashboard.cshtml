<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
<style type="text/css">
    .shadow {
        -moz-box-shadow: 3px 3px 5px 6px #ccc;
        -webkit-box-shadow: 3px 3px 5px 6px #ccc;
        box-shadow: 3px 3px 5px 6px #ccc;
    }

    .card {
        border-radius: 10px 10px;
    }
</style>
<style>
    .toggle.ios, .toggle-on.ios, .toggle-off.ios {
        border-radius: 20rem;
    }

        .toggle.ios .toggle-handle {
            border-radius: 20rem;
        }
</style>
<style>

    @@media (max-width:500px) {
        .slides {
            display: flex;
            overflow-x: auto;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            padding: 0px 0px 0px 0px;
        }

            .slides::-webkit-scrollbar {
                width: 0px;
                height: 0px;
                color: #9C5E95;
            }

            .slides::-webkit-scrollbar-thumb {
                background-color: rgba(128, 128, 128, 0.44);
                border-radius: 20px;
            }

            .slides::-webkit-scrollbar-track {
                background: transparent;
            }
    }

    @@media (min-width:510px) {

        .slides {
            display: flex;
            overflow-x: hidden;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            padding: 0px 0px 0px 0px;
        }


            .slides::-webkit-scrollbar {
                width: 1px;
                height: 5px;
                color: #9C5E95;
                margin-top: -20px;
            }

            .slides::-webkit-scrollbar-thumb {
                background-color: rgba(128, 128, 128, 0.44);
                border-radius: 20px;
            }

            .slides::-webkit-scrollbar-track {
                background: transparent;
            }

            .slides:hover {
                overflow: auto;
                margin-bottom: 20px;
            }
    }
</style>
<style type="text/css">
    .led-box {
        height: 30px;
        width: 25%;
        margin: 10px 0;
        float: left;
    }

        .led-box p {
            font-size: 12px;
            text-align: center;
            margin: 1em;
        }

    .led-red {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #F00;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;
        -webkit-animation: blinkRed 0.5s infinite;
        -moz-animation: blinkRed 0.5s infinite;
        -ms-animation: blinkRed 0.5s infinite;
        -o-animation: blinkRed 0.5s infinite;
        animation: blinkRed 0.5s infinite;
    }

    @@-webkit-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    @@-moz-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    @@-ms-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    @@-o-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    @@keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    .led-yellow {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #FF0;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 12px;
        -webkit-animation: blinkYellow 1s infinite;
        -moz-animation: blinkYellow 1s infinite;
        -ms-animation: blinkYellow 1s infinite;
        -o-animation: blinkYellow 1s infinite;
        animation: blinkYellow 1s infinite;
    }

    @@-webkit-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    @@-moz-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    @@-ms-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    @@-o-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    @@keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    .led-green {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #ABFF00;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;
    }

    .led-blue {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #24E0FF;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #006 0 -1px 9px, #3F8CFF 0 2px 14px;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js" integrity="sha512-F636MAkMAhtTplahL9F6KmTfxTmYcAcjcCkyu0f0voT3N/6vzAuJ4Num55a0gEJ+hRLHhdz3vDvZpf6kqgEa5w==" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" integrity="sha512-hievggED+/IcfxhYRSr4Auo1jbiOczpqpLZwfTVL/6hFACdbI3WQ8S9NCX50gsM9QVE+zLk/8wb9TlgriFbX+Q==" crossorigin="anonymous" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js.map"></script>

<script src="~/assets/kuma-gauge/kuma-gauge.jquery.js"></script>

<!-- FusionCharts -->
<script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js"></script>
<!-- jQuery-FusionCharts -->
<script type="text/javascript" src="https://rawgit.com/fusioncharts/fusioncharts-jquery-plugin/develop/dist/fusioncharts.jqueryplugin.min.js"></script>
<!-- Fusion Theme -->
<script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" integrity="sha512-d9xgZrVZpmmQlfonhQUvTR7lMPtO7NkZMkA0ABN3PHCbKA5nqylQ/yWlFAyY6hYgdF1Qh6nYiuADWwKB4C2WSw==" crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.css" integrity="sha512-/zs32ZEJh+/EO2N1b0PEdoA10JkdC3zJ8L5FTiQu82LR9S/rOQNfQN7U59U9BC12swNeRAz3HSzIL2vpp4fv3w==" crossorigin="anonymous" />
<script src="~/assets/MqttWebSocket/mqttws31.js"></script>

<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3>Dashboard</h3>
    </div>
    <div class="col-md-7 align-self-center text-right">
        <div class="d-flex justify-content-end align-items-center">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Dashboard","Conveyor")">Home</a></li>
                <li class="breadcrumb-item active">Dashboard</li>
            </ol>
        </div>
    </div>
</div>

<div class="row">
    <div class="slides" style="align-content:center;">
        <!--Monitoring-->
        <div class="col-sm-3 text-center">
            <div class="card shadow" style="height:270px;">
                <div class="card-body">
                    <h4 class="card-title">Speed Monitoring</h4>
                    <hr />
                    <p>RPM</p>
                    <div class="js-gauge speed gauge" style="margin-top:-40px;padding-top:0px;"></div>
                </div>
            </div>
        </div>
        <div class="col-sm-2 text-center">
            <div class="card shadow" style="height:270px;">
                <div class="card-body">
                    <h4 class="card-title">Control</h4>
                    <hr />
                    <p>Status</p>
                    <div class="led-red" id="LedStatus"></div>
                    <br />
                    <p>Start / Stop</p>
                    <input id="btnStart" type="checkbox" 
                           checked="checked" data-toggle="toggle" 
                           data-on="Start" 
                           data-off="Stop" data-style="ios" 
                           data-onstyle="success" data-offstyle="danger" style="text-align:center;">
                </div>
            </div>
        </div>
        <div class="col-sm-3 text-center">
            <div class="card shadow" style="height:270px;">
                <div class="card-body">
                    <h4 class="card-title">Temp. Monitoring</h4>
                    <div class="badge badge-info" style="border-radius:50% 10%;margin-top:-10px;" id="badgeSuhu">
                        <strong style="font-size:medium;" id="txtSuhu">-5 *C</strong>
                    </div>
                    <div id="chart-container"></div>
                    <script type="text/javascript">
                        
                        FusionCharts.ready(function () {
                            var updateAnnotation,
                                chart = new FusionCharts({
                                    type: 'thermometer',
                                    renderAt: 'chart-container',
                                    id: 'myThm',
                                    width: '200',
                                    height: '190',
                                    dataFormat: 'json',
                                    dataSource: {
                                        "chart": {
                                            "theme": "fusion",
                                            //"caption": "Temperature Monitor",
                                            //"subcaption": " Central cold store",
                                            "lowerLimit": "-10",
                                            "upperLimit": "0",
                                            "decimals": "1",
                                            "numberSuffix": "°C",
                                            "showhovereffect": "1",
                                            "thmFillColor": "#008ee4",
                                            "showGaugeBorder": "1",
                                            "gaugeBorderColor": "#008ee4",
                                            "gaugeBorderThickness": "2",
                                            "gaugeBorderAlpha": "30",
                                            "thmOriginX": "100",
                                            "chartBottomMargin": "20",
                                            "valueFontColor": "#000000",
                                            "theme": "fusion"
                                        },
                                        "value": "-6",
                                    },
                                    "events": {
                                        "initialized": function (evt, arg) {
                                            var dataUpdate = setInterval(function () {
                                                var value,
                                                    prevTemp = FusionCharts.items["myThm"].getData(),
                                                    mainTemp = (Math.random() * 10) * (-1),
                                                    diff = Math.abs(prevTemp - mainTemp);

                                                diff = diff > 1 ? (Math.random() * 1) : diff;
                                                if (mainTemp > prevTemp) {
                                                    value = prevTemp + diff;
                                                } else {
                                                    value = prevTemp - diff;
                                                }
                                                //$("#txtSuhu").text(value);
                                                $("#txtSuhu").text(Number(value).toFixed(2) + " *C");
                                                FusionCharts.items["myThm"].feedData("&value=" + value);

                                            }, 3000);
                                            updateAnnotation = function (evtObj, argObj) {
                                                var code,
                                                    chartObj = evtObj.sender,
                                                    val = chartObj.getData(),
                                                    annotations = chartObj.annotations;

                                                if (val >= -4.5) {
                                                    code = "#00FF00";
                                                    $("#badgeSuhu").removeClass("badge-info");
                                                    $("#badgeSuhu").removeClass("badge-danger");
                                                    $("#badgeSuhu").removeClass("badge-success");
                                                    $("#badgeSuhu").addClass("badge-danger");
                                                }
                                                else if (val <= -4.5 && val >= -6) {
                                                    code = "#ff9900";
                                                    $("#badgeSuhu").removeClass("badge-info");
                                                    $("#badgeSuhu").removeClass("badge-danger");
                                                    $("#badgeSuhu").removeClass("badge-success");

                                                    $("#badgeSuhu").addClass("badge-info");

                                                }
                                                else {
                                                    code = "#ff0000";
                                                    $("#badgeSuhu").removeClass("badge-info");
                                                    $("#badgeSuhu").removeClass("badge-danger");
                                                    $("#badgeSuhu").removeClass("badge-success");
                                                    $("#badgeSuhu").addClass("badge-success");
                                                }
                                            };
                                        },
                                        "renderComplete": function (evt, arg) {
                                            updateAnnotation(evt, arg);
                                        },
                                        "realtimeUpdateComplete": function (evt, arg) {
                                            updateAnnotation(evt, arg);
                                        }
                                    }
                                })
                                    .render();
                        });
                    </script>
                </div>
            </div>
        </div>
        <div class="col-sm-3 text-center">
            <div class="card shadow" style="height:270px;">
                <div class="card-body">
                    <h4 class="card-title">Voltage Monitoring</h4>
                    <p style="margin-top:20px;">Volt</p>
                    <div class="js-gauge voltage gauge" style="margin-top:-40px;padding-top:0px;"></div>
                    <script type="text/javascript">
                        $('.voltage').kumaGauge({
                            value: Math.floor((Math.random() * 99)/10)
                        });

                        $('.voltage').kumaGauge('update', {
                            value: Math.floor((Math.random() * 99)/10)
                        });
                        $('.voltage').kumaGauge({
                            value: Math.floor((Math.random() * 99)/10),
                            fill: '#F34A53',
                            gaugeBackground: '#1E4147',
                            gaugeWidth: 10,
                            showNeedle: false,
                            label: {
                                display: true,
                                left: 'Min',
                                right: 'Max',
                                fontFamily: 'Helvetica',
                                fontColor: '#1E4147',
                                fontSize: '11',
                                fontWeight: 'bold'
                            }
                        });
                    </script>
                </div>
            </div>
        </div>
        <div class="col-sm-3 text-center">
            <div class="card shadow" style="height:270px;">
                <div class="card-body">
                    <h4 class="card-title">Vibrate Monitoring</h4>
                    <p style="margin-top:20px;">Hertz</p>
                    <div class="js-gauge vibrates gauge" style="margin-top:-40px;padding-top:0px;"></div>
                    <script type="text/javascript">
                        $('.vibrates').kumaGauge({
                            value: Math.floor((0 * 99))
                        });

                        $('.vibrates').kumaGauge('update', {
                            value: Math.floor((0 * 99))
                        });
                        $('.vibrates').kumaGauge({
                            value: Math.floor((0 * 99)),
                            fill: '#F34A53',
                            gaugeBackground: '#1E4147',
                            gaugeWidth: 10,
                            showNeedle: false,
                            label: {
                                display: true,
                                left: 'Min',
                                right: 'Max',
                                fontFamily: 'Helvetica',
                                fontColor: '#1E4147',
                                fontSize: '11',
                                fontWeight: 'bold'
                            }
                        });
                    </script>
                </div>
            </div>
        </div>

    </div>
    <div class="slides" style="align-content:center;padding-right:38px;">
        <div class="col-sm-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title">Speed Statistik</h4>
                    <div>
                        <canvas id="myChart1" height="150"></canvas>
                        <script type="text/javascript">
                            var ctx = document.getElementById('myChart1').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'RPM',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title">Temperatur Statistik</h4>
                    <div>
                        <canvas id="myChart2" height="150"></canvas>
                        <script type="text/javascript">
                            var ctx = document.getElementById('myChart2').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: '*Celcius',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title">Voltage Statistik</h4>
                    <div>
                        <canvas id="myChart3" height="150"></canvas>
                        <script type="text/javascript">
                            var ctx = document.getElementById('myChart3').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'Volt (V)',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="card shadow">
                <div class="card-body">
                    <h4 class="card-title">Vibrate Statistik</h4>
                    <div>
                        <canvas id="myChart4" height="150"></canvas>
                        <script type="text/javascript">
                            var ctx = document.getElementById('myChart4').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'Hertz (Hz)',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Speed Chart-->
</div>

<script type="text/javascript">
    var StateBtn = true;
    $(function () {
        client.connect(options);
        $('#btnStart').change(async function () {
            if ($(this).prop('checked') != StateBtn) {
                if ($(this).prop('checked') == true) {
                    await publish('0', 'IOTAPP/LED', 0);
                }
                else {
                    await publish('1', 'IOTAPP/LED', 0);
                }
            }
        })
    });
</script>
<script type="text/javascript">
    $('.speed').kumaGauge({
        value: Math.floor((0 * 99))
    });

    $('.speed').kumaGauge('update', {
        value: Math.floor((0 * 99))
    });

    $('.speed').kumaGauge({
        value: Math.floor((0 * 99)),
        fill: '#F34A53',
        gaugeBackground: '#1E4147',
        gaugeWidth: 10,
        showNeedle: false,
        label: {
            display: true,
            left: 'Min',
            right: 'Max',
            fontFamily: 'Helvetica',
            fontColor: '#1E4147',
            fontSize: '11',
            fontWeight: 'bold'
        }
    });
</script>
<script type="text/javascript">
    //Using the HiveMQ public Broker, with a random client Id
    var client = new Messaging.Client("mqtt.eclipse.org", 80, "myclientid_" + parseInt(Math.random() * 100, 10));

    //Gets  called if the websocket/mqtt connection gets disconnected for any reason
    client.onConnectionLost = function (responseObject) {
        //Depending on your scenario you could implement a reconnect logic here
        client.connect(options);
        //alert("connection lost: " + responseObject.errorMessage);
    };

    //Gets called whenever you receive a message for your subscriptions
    client.onMessageArrived = function (message) {
        if (message.destinationName == "IOTAPP/KONVEYOR") {
            var newVal = Math.floor((message.payloadString)) / 10;
            $('.speed').kumaGauge('update', {
                value: newVal
            });
        }
        else if (message.destinationName == "IOTAPP/LED") {
            if (message.payloadString == 1) {
                $("#LedStatus").removeClass("led-red");
                $("#LedStatus").addClass("led-green");
                $('#btnStart').prop('checked', false).change();
                StateBtn = false;
            }
            else {
                $("#LedStatus").removeClass("led-green");
                $("#LedStatus").addClass("led-red");
                $('#btnStart').prop('checked', true).change();
                StateBtn = true;
            }
        }
        else if (message.destinationName == "IOTAPP/TEGANGAN") {
            var newVal = Math.floor((message.payloadString)) / 10;
            $('.voltage').kumaGauge('update', {
                value: newVal
            });
        }
        else if (message.destinationName == "IOTAPP/GETARAN") {
            var newVal = Math.floor((message.payloadString));
            $('.vibrates').kumaGauge('update', {
                value: newVal
            });
        }

        
    };

    //Connect Options
    var options = {
        timeout: 3,
        //Gets Called if the connection has sucessfully been established
        onSuccess: function () {
            //alert("Connected");
            client.subscribe('IOTAPP/#', { qos: 2 });
            //alert('Subscribed');
        },
        //Gets Called if the connection could not be established
        onFailure: function (message) {
            alert("Connection failed: " + message.errorMessage);
        }
    };

    //Creates a new Messaging.Message Object and sends it to the HiveMQ MQTT Broker
    var publish = async function (payload, topic, qos) {
        //Send your message (also possible to serialize it as JSON or protobuf or just use a string, no limitations)
        var message = new Messaging.Message(payload);
        message.destinationName = topic;
        message.qos = qos;
        await client.send(message);
    }
</script>



