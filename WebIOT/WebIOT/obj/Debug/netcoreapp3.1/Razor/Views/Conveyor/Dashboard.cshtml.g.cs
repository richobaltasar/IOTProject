#pragma checksum "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\Conveyor\Dashboard.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8f6c6f47cabf74538f1185078728108055d37978"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Conveyor_Dashboard), @"mvc.1.0.view", @"/Views/Conveyor/Dashboard.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\_ViewImports.cshtml"
using WebIOT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\_ViewImports.cshtml"
using WebIOT.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\_ViewImports.cshtml"
using WebIOT.Function;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\_ViewImports.cshtml"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8f6c6f47cabf74538f1185078728108055d37978", @"/Views/Conveyor/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b9482a01595e1eed09bbb6581e85bd83ae9dc148", @"/Views/_ViewImports.cshtml")]
    public class Views_Conveyor_Dashboard : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<DashboardModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/kuma-gauge/kuma-gauge.jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script src=""https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js"" type=""text/javascript""></script>
<style type=""text/css"">
    .shadow {
        -moz-box-shadow: 3px 3px 5px 6px #ccc;
        -webkit-box-shadow: 3px 3px 5px 6px #ccc;
        box-shadow: 3px 3px 5px 6px #ccc;
    }

    .card {
        border-radius: 10px 10px;
    }
</style>
<style>
    .toggle.ios, .toggle-on.ios, .toggle-off.ios {
        border-radius: 20rem;
    }

        .toggle.ios .toggle-handle {
            border-radius: 20rem;
        }
</style>
<style>
    ");
            WriteLiteral(@"@media (max-width:500px) {
        .slides {
            display: flex;
            overflow-x: auto;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            padding: 0px 0px 0px 0px;
        }

            .slides::-webkit-scrollbar {
                width: 0px;
                height: 0px;
                color: #9C5E95;
            }

            .slides::-webkit-scrollbar-thumb {
                background-color: rgba(128, 128, 128, 0.44);
                border-radius: 20px;
            }

            .slides::-webkit-scrollbar-track {
                background: transparent;
            }
    }

    ");
            WriteLiteral(@"@media (min-width:510px) {

        .slides {
            display: flex;
            overflow-x: hidden;
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            padding: 0px 0px 0px 0px;
        }


            .slides::-webkit-scrollbar {
                width: 1px;
                height: 5px;
                color: #9C5E95;
                margin-top: -20px;
            }

            .slides::-webkit-scrollbar-thumb {
                background-color: rgba(128, 128, 128, 0.44);
                border-radius: 20px;
            }

            .slides::-webkit-scrollbar-track {
                background: transparent;
            }

            .slides:hover {
                overflow: auto;
                margin-bottom: 20px;
            }
    }
</style>
<style type=""text/css"">
    .led-box {
        height: 30px;
        width: 25%;
        margin: 10px 0;
        float: left;
    }
");
            WriteLiteral(@"
        .led-box p {
            font-size: 12px;
            text-align: center;
            margin: 1em;
        }

    .led-red {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #F00;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 12px;
        -webkit-animation: blinkRed 0.5s infinite;
        -moz-animation: blinkRed 0.5s infinite;
        -ms-animation: blinkRed 0.5s infinite;
        -o-animation: blinkRed 0.5s infinite;
        animation: blinkRed 0.5s infinite;
    }

    ");
            WriteLiteral(@"@-webkit-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    ");
            WriteLiteral(@"@-moz-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    ");
            WriteLiteral(@"@-ms-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    ");
            WriteLiteral(@"@-o-keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    ");
            WriteLiteral(@"@keyframes blinkRed {
        from {
            background-color: #F00;
        }

        50% {
            background-color: #A00;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #441313 0 -1px 9px, rgba(255, 0, 0, 0.5) 0 2px 0;
        }

        to {
            background-color: #F00;
        }
    }

    .led-yellow {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #FF0;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 12px;
        -webkit-animation: blinkYellow 1s infinite;
        -moz-animation: blinkYellow 1s infinite;
        -ms-animation: blinkYellow 1s infinite;
        -o-animation: blinkYellow 1s infinite;
        animation: blinkYellow 1s infinite;
    }

    ");
            WriteLiteral(@"@-webkit-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    ");
            WriteLiteral(@"@-moz-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    ");
            WriteLiteral(@"@-ms-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    ");
            WriteLiteral(@"@-o-keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    ");
            WriteLiteral(@"@keyframes blinkYellow {
        from {
            background-color: #FF0;
        }

        50% {
            background-color: #AA0;
            box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #808002 0 -1px 9px, #FF0 0 2px 0;
        }

        to {
            background-color: #FF0;
        }
    }

    .led-green {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #ABFF00;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #304701 0 -1px 9px, #89FF00 0 2px 12px;
    }

    .led-blue {
        margin: 0 auto;
        width: 24px;
        height: 24px;
        background-color: #24E0FF;
        border-radius: 50%;
        box-shadow: rgba(0, 0, 0, 0.2) 0 -1px 7px 1px, inset #006 0 -1px 9px, #3F8CFF 0 2px 14px;
    }
</style>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"" integrity=""sha512-F636MAkMAhtTplahL9F6KmTfxTmYcAcjcCkyu0f0voT");
            WriteLiteral(@"3N/6vzAuJ4Num55a0gEJ+hRLHhdz3vDvZpf6kqgEa5w=="" crossorigin=""anonymous""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css"" integrity=""sha512-hievggED+/IcfxhYRSr4Auo1jbiOczpqpLZwfTVL/6hFACdbI3WQ8S9NCX50gsM9QVE+zLk/8wb9TlgriFbX+Q=="" crossorigin=""anonymous"" />
<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js.map""></script>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8f6c6f47cabf74538f1185078728108055d3797812605", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<!-- FusionCharts -->
<script type=""text/javascript"" src=""https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js""></script>
<!-- jQuery-FusionCharts -->
<script type=""text/javascript"" src=""https://rawgit.com/fusioncharts/fusioncharts-jquery-plugin/develop/dist/fusioncharts.jqueryplugin.min.js""></script>
<!-- Fusion Theme -->
<script type=""text/javascript"" src=""https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js""></script>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"" integrity=""sha512-d9xgZrVZpmmQlfonhQUvTR7lMPtO7NkZMkA0ABN3PHCbKA5nqylQ/yWlFAyY6hYgdF1Qh6nYiuADWwKB4C2WSw=="" crossorigin=""anonymous""></script>
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.css"" integrity=""sha512-/zs32ZEJh+/EO2N1b0PEdoA10JkdC3zJ8L5FTiQu82LR9S/rOQNfQN7U59U9BC12swNeRAz3HSzIL2vpp4fv3w=="" crossorigin=""anonymous"" />

");
            WriteLiteral(@"
<div class=""row page-titles"">
    <div class=""col-md-5 align-self-center"">
        <h3>Dashboard</h3>
    </div>
    <div class=""col-md-7 align-self-center text-right"">
        <div class=""d-flex justify-content-end align-items-center"">
            <ol class=""breadcrumb"">
                <li class=""breadcrumb-item""><a");
            BeginWriteAttribute("href", " href=\"", 9419, "\"", 9461, 1);
#nullable restore
#line 318 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\Conveyor\Dashboard.cshtml"
WriteAttributeValue("", 9426, Url.Action("Dashboard","Conveyor"), 9426, 35, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">Home</a></li>\r\n                <li class=\"breadcrumb-item active\">Dashboard</li>\r\n            </ol>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    \r\n    ");
#nullable restore
#line 327 "D:\Tentakel\UII\Project\OEE Dashboard\IOTProject\WebIOT\WebIOT\Views\Conveyor\Dashboard.cshtml"
Write(await Html.PartialAsync("_MqttPanel", Model.MqqtPanel));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

    <div class=""slides"" style=""align-content:center;padding-right:38px;"">
        <div class=""col-sm-6"">
            <div class=""card shadow"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Speed Statistik</h4>
                    <div>
                        <canvas id=""myChart1"" height=""150""></canvas>
                        <script type=""text/javascript"">
                            var ctx = document.getElementById('myChart1').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'RPM',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                      ");
            WriteLiteral(@"      'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
          ");
            WriteLiteral(@"                          }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-sm-6"">
            <div class=""card shadow"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Temperatur Statistik</h4>
                    <div>
                        <canvas id=""myChart2"" height=""150""></canvas>
                        <script type=""text/javascript"">
                            var ctx = ");
            WriteLiteral(@"document.getElementById('myChart2').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: '*Celcius',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
     ");
            WriteLiteral(@"                                   borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                       ");
            WriteLiteral(@"             }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-sm-6"">
            <div class=""card shadow"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Voltage Statistik</h4>
                    <div>
                        <canvas id=""myChart3"" height=""150""></canvas>
                        <script type=""text/javascript"">
                            var ctx = document.getElementById('myChart3').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'Volt (V)',
                                ");
            WriteLiteral(@"        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102, 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            ");
            WriteLiteral(@"'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
        <div class=""col-sm-6"">
            <div class=""card shadow"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Vibrate Statistik</h4>
                    <div>
                        <canvas i");
            WriteLiteral(@"d=""myChart4"" height=""150""></canvas>
                        <script type=""text/javascript"">
                            var ctx = document.getElementById('myChart4').getContext('2d');
                            var myChart = new Chart(ctx, {
                                type: 'line',
                                data: {
                                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                                    datasets: [{
                                        label: 'Hertz (Hz)',
                                        data: [12, 19, 3, 5, 2, 3],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.2)',
                                            'rgba(54, 162, 235, 0.2)',
                                            'rgba(255, 206, 86, 0.2)',
                                            'rgba(75, 192, 192, 0.2)',
                                            'rgba(153, 102,");
            WriteLiteral(@" 255, 0.2)',
                                            'rgba(255, 159, 64, 0.2)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)',
                                            'rgba(153, 102, 255, 1)',
                                            'rgba(255, 159, 64, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                               ");
            WriteLiteral(@" beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<DashboardModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
